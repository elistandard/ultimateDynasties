"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/DynastyChart.tsx":
/*!*************************************!*\
  !*** ./components/DynastyChart.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DynastyChart; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"(app-pages-browser)/./node_modules/d3/src/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n// Team color mapping\nconst teamColors = {\n    \"Stanford\": \"#800000\",\n    \"Carleton\": \"#c1172a\",\n    \"UC Santa Barbara\": \"#000000\",\n    \"UC San Diego\": \"#0077AA\",\n    \"UC Santa Cruz\": \"#FFD700\",\n    \"UC Davis\": \"#e5c539\",\n    \"UC Berkeley\": \"#1D315E\",\n    \"UCLA\": \"#0000FF\",\n    \"UC Irvine\": \"#0064A4\",\n    \"UC Riverside\": \"#2D4A8C\"\n};\n// Format rank with ordinal suffix\nfunction formatRank(rank) {\n    const j = rank % 10;\n    const k = rank % 100;\n    if (j === 1 && k !== 11) return \"\".concat(rank, \"st\");\n    if (j === 2 && k !== 12) return \"\".concat(rank, \"nd\");\n    if (j === 3 && k !== 13) return \"\".concat(rank, \"rd\");\n    return \"\".concat(rank, \"th\");\n}\nfunction DynastyChart(param) {\n    let { data, selectedTeam, onTeamSelect } = param;\n    _s();\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current || !data.length) return;\n        // Clear previous content\n        d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).selectAll(\"*\").remove();\n        // Set up dimensions\n        const width = 1000;\n        const height = 500;\n        const margin = {\n            top: 30,\n            right: 100,\n            bottom: 70,\n            left: 50\n        };\n        // Create SVG\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).attr(\"viewBox\", [\n            0,\n            0,\n            width,\n            height\n        ]).style(\"font-family\", \"Lato\");\n        var _d3_min;\n        // Set up scales\n        const minYear = (_d3_min = d3__WEBPACK_IMPORTED_MODULE_2__.min(data, (d)=>d.Year)) !== null && _d3_min !== void 0 ? _d3_min : 0;\n        var _d3_max;\n        const maxYear = (_d3_max = d3__WEBPACK_IMPORTED_MODULE_2__.max(data, (d)=>d.Year)) !== null && _d3_max !== void 0 ? _d3_max : 0;\n        const xScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain([\n            minYear - 0.5,\n            maxYear + 0.5\n        ]).range([\n            margin.left,\n            width - margin.right\n        ]);\n        var _d3_max1;\n        const maxRank = (_d3_max1 = d3__WEBPACK_IMPORTED_MODULE_2__.max(data, (d)=>d.Rank)) !== null && _d3_max1 !== void 0 ? _d3_max1 : 0;\n        const yScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain([\n            maxRank + 1,\n            1\n        ]).range([\n            height - margin.bottom,\n            margin.top\n        ]);\n        // Create tooltip\n        const tooltip = d3__WEBPACK_IMPORTED_MODULE_2__.select(\"body\").append(\"div\").style(\"position\", \"absolute\").style(\"background-color\", \"rgba(255, 255, 255, 0.95)\").style(\"border\", \"1px solid #ddd\").style(\"border-radius\", \"5px\").style(\"padding\", \"10px\").style(\"box-shadow\", \"2px 2px 6px rgba(0, 0, 0, 0.1)\").style(\"pointer-events\", \"none\").style(\"opacity\", 0).style(\"font-family\", \"Lato\").style(\"font-weight\", \"normal\");\n        // Add title\n        svg.append(\"text\").attr(\"x\", margin.left - 10).attr(\"y\", margin.top / 2).attr(\"text-anchor\", \"end\").style(\"font-family\", \"Lato\").style(\"font-weight\", \"bold\").style(\"fill\", \"#000000\").style(\"font-size\", \"14px\").text(\"National Championships\");\n        // Add axis labels\n        svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", height - margin.bottom / 3).attr(\"text-anchor\", \"middle\").style(\"font-family\", \"Lato\").style(\"font-weight\", \"bold\").text(\"Year\");\n        svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -(height / 2)).attr(\"y\", margin.left / 3).attr(\"text-anchor\", \"middle\").style(\"font-family\", \"Lato\").style(\"font-weight\", \"bold\").text(\"Rank\");\n        // Add vertical grid lines\n        svg.append(\"g\").attr(\"class\", \"grid\").attr(\"transform\", \"translate(0, \".concat(height - margin.bottom, \")\")).style(\"stroke-dasharray\", \"3,3\").style(\"opacity\", 0.2).call(d3__WEBPACK_IMPORTED_MODULE_2__.axisBottom(xScale).tickValues([\n            2020\n        ]).tickSize(-(height - margin.top - margin.bottom)).tickFormat(()=>\"\"));\n        // Group data by team\n        const groupedData = d3__WEBPACK_IMPORTED_MODULE_2__.group(data, (d)=>d.Team);\n        // Draw lines for non-highlighted teams\n        groupedData.forEach((teamData, teamName)=>{\n            if (teamName !== selectedTeam) {\n                const sortedData = Array.from(teamData).sort((a, b)=>a.Year - b.Year);\n                for(let i = 0; i < sortedData.length - 1; i++){\n                    const current = sortedData[i];\n                    const next = sortedData[i + 1];\n                    if (next.Year - current.Year === 1 || current.Year === 2019 && next.Year === 2021) {\n                        const x1 = xScale(current.Year);\n                        const y1 = yScale(current.Rank);\n                        const x2 = xScale(next.Year);\n                        const y2 = yScale(next.Rank);\n                        const path = d3__WEBPACK_IMPORTED_MODULE_2__.path();\n                        path.moveTo(x1, y1);\n                        path.bezierCurveTo(x1 + (x2 - x1) * 0.5, y1, x2 - (x2 - x1) * 0.5, y2, x2, y2);\n                        svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", teamColors[teamName] || \"#1f51f3\").attr(\"stroke-opacity\", 0.2).attr(\"stroke-width\", 0.7).attr(\"d\", path.toString());\n                    }\n                }\n            }\n        });\n        // Draw lines for highlighted team\n        if (selectedTeam) {\n            const highlightedTeamData = groupedData.get(selectedTeam);\n            if (highlightedTeamData) {\n                const sortedData = Array.from(highlightedTeamData).sort((a, b)=>a.Year - b.Year);\n                for(let i = 0; i < sortedData.length - 1; i++){\n                    const current = sortedData[i];\n                    const next = sortedData[i + 1];\n                    if (next.Year - current.Year === 1 || current.Year === 2019 && next.Year === 2021) {\n                        const x1 = xScale(current.Year);\n                        const y1 = yScale(current.Rank);\n                        const x2 = xScale(next.Year);\n                        const y2 = yScale(next.Rank);\n                        const path = d3__WEBPACK_IMPORTED_MODULE_2__.path();\n                        path.moveTo(x1, y1);\n                        path.bezierCurveTo(x1 + (x2 - x1) * 0.5, y1, x2 - (x2 - x1) * 0.5, y2, x2, y2);\n                        svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", teamColors[selectedTeam] || \"#1f51f3\").attr(\"stroke-width\", 2).attr(\"d\", path.toString());\n                    }\n                }\n            }\n        }\n        // Draw non-highlighted points\n        svg.selectAll(\".background-points\").data(data.filter((d)=>d.Team !== selectedTeam)).join(\"circle\").attr(\"class\", \"background-points\").attr(\"cx\", (d)=>xScale(d.Year)).attr(\"cy\", (d)=>yScale(d.Rank)).attr(\"r\", 3).attr(\"fill\", (d)=>teamColors[d.Team] || \"#1f51f3\").attr(\"opacity\", 0.4).style(\"cursor\", \"pointer\").on(\"mouseover\", function(event, d) {\n            const point = d3__WEBPACK_IMPORTED_MODULE_2__.select(this);\n            point.attr(\"r\", 6).style(\"stroke\", teamColors[d.Team] || \"#1f51f3\").style(\"stroke-width\", 2);\n            tooltip.html('\\n            <div style=\"font-weight: bold\">'.concat(d.Team, '</div>\\n            <div style=\"font-size: 0.9em\">\\n              ').concat(d.Year, \"<br>\\n              \").concat(formatRank(d.TRank), \"\\n            </div>\\n          \")).style(\"left\", \"\".concat(event.pageX + 15, \"px\")).style(\"top\", \"\".concat(event.pageY - 15, \"px\")).style(\"opacity\", 1);\n        }).on(\"mousemove\", function(event) {\n            tooltip.style(\"left\", \"\".concat(event.pageX + 15, \"px\")).style(\"top\", \"\".concat(event.pageY - 15, \"px\"));\n        }).on(\"mouseout\", function() {\n            const point = d3__WEBPACK_IMPORTED_MODULE_2__.select(this);\n            point.attr(\"r\", 3).style(\"stroke\", \"none\");\n            tooltip.style(\"opacity\", 0);\n        }).on(\"click\", function(event, d) {\n            if (onTeamSelect) {\n                onTeamSelect(d.Team);\n            }\n        });\n        // Draw highlighted points\n        if (selectedTeam) {\n            svg.selectAll(\".highlighted-points-group\").data(data.filter((d)=>d.Team === selectedTeam)).join(\"g\").attr(\"class\", \"highlighted-points-group\").attr(\"transform\", (d)=>\"translate(\".concat(xScale(d.Year), \", \").concat(yScale(d.Rank), \")\")).style(\"cursor\", \"pointer\").each(function(d) {\n                const group = d3__WEBPACK_IMPORTED_MODULE_2__.select(this);\n                // Main circle\n                group.append(\"circle\").attr(\"r\", 11).attr(\"fill\", teamColors[d.Team] || \"#1f51f3\");\n                // Star for rank 1\n                if (d.Rank === 1) {\n                    group.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"dy\", \"-1.2em\").attr(\"fill\", teamColors[d.Team] || \"#1f51f3\").style(\"font-size\", \"14px\").text(\"⭐\");\n                }\n                // Rank text\n                group.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"dy\", \"0.35em\").attr(\"fill\", \"white\").style(\"font-size\", \"9px\").style(\"font-weight\", \"bold\").style(\"font-family\", \"Lato\").text(d.TRank);\n            }).on(\"mouseover\", function(event, d) {\n                const circle = d3__WEBPACK_IMPORTED_MODULE_2__.select(this).select(\"circle\").attr(\"r\", 14).style(\"stroke\", \"#000\").style(\"stroke-width\", 2);\n                tooltip.html('\\n              <div style=\"font-weight: bold\">'.concat(d.Team, '</div>\\n              <div style=\"font-size: 0.9em\">\\n                ').concat(d.Year, \"<br>\\n                \").concat(formatRank(d.TRank), \"\\n              </div>\\n            \")).style(\"left\", \"\".concat(event.pageX + 15, \"px\")).style(\"top\", \"\".concat(event.pageY - 15, \"px\")).style(\"opacity\", 1);\n            }).on(\"mousemove\", function(event) {\n                tooltip.style(\"left\", \"\".concat(event.pageX + 15, \"px\")).style(\"top\", \"\".concat(event.pageY - 15, \"px\"));\n            }).on(\"mouseout\", function() {\n                const circle = d3__WEBPACK_IMPORTED_MODULE_2__.select(this).select(\"circle\").attr(\"r\", 11).style(\"stroke\", \"none\");\n                tooltip.style(\"opacity\", 0);\n            });\n        }\n        // Add axes\n        svg.append(\"g\").attr(\"transform\", \"translate(0, \".concat(height - margin.bottom, \")\")).call(d3__WEBPACK_IMPORTED_MODULE_2__.axisBottom(xScale).tickFormat((d)=>\"'\".concat(d.toString().slice(-2))).tickValues(d3__WEBPACK_IMPORTED_MODULE_2__.range(minYear, maxYear + 1))).call((g)=>g.select(\".domain\").remove()).call((g)=>g.selectAll(\".tick line\").remove()).call((g)=>g.selectAll(\"text\").style(\"font-family\", \"Lato\").style(\"font-weight\", \"bold\").style(\"fill\", \"#666666\").style(\"font-size\", \"12px\"));\n        svg.append(\"g\").attr(\"transform\", \"translate(\".concat(margin.left, \", 0)\")).call(d3__WEBPACK_IMPORTED_MODULE_2__.axisLeft(yScale).tickValues(d3__WEBPACK_IMPORTED_MODULE_2__.range(1, maxRank + 1)).tickFormat(d3__WEBPACK_IMPORTED_MODULE_2__.format(\"d\"))).call((g)=>g.select(\".domain\").remove()).call((g)=>g.selectAll(\".tick line\").remove()).call((g)=>g.selectAll(\"text\").style(\"font-family\", \"Lato\").style(\"font-weight\", \"bold\").style(\"fill\", \"#666666\").style(\"font-size\", \"12px\"));\n        // Clean up tooltip on unmount\n        return ()=>{\n            tooltip.remove();\n        };\n    }, [\n        data,\n        selectedTeam,\n        onTeamSelect\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative w-full overflow-x-auto\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n            ref: svgRef,\n            className: \"mx-auto\"\n        }, void 0, false, {\n            fileName: \"/Users/elistandard/Documents/03-Code/CS_Projects/Github/ultimateDynasties/components/DynastyChart.tsx\",\n            lineNumber: 357,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/elistandard/Documents/03-Code/CS_Projects/Github/ultimateDynasties/components/DynastyChart.tsx\",\n        lineNumber: 356,\n        columnNumber: 5\n    }, this);\n}\n_s(DynastyChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = DynastyChart;\nvar _c;\n$RefreshReg$(_c, \"DynastyChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/DynastyChart.tsx\n"));

/***/ })

});